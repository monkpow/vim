let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
argglobal
let s:cpo_save=&cpo
set cpo&vim
nmap <buffer> gf <Plug>RailsTabFind
nmap <buffer> f <Plug>RailsSplitFind
nmap <buffer> [f <Plug>RailsAlternate
nmap <buffer> ]f <Plug>RailsRelated
nmap <buffer> gf <Plug>RailsFind
map <buffer> <silent> <Plug>RailsTabFind :RTfind
map <buffer> <silent> <Plug>RailsVSplitFind :RVfind
map <buffer> <silent> <Plug>RailsSplitFind :RSfind
map <buffer> <silent> <Plug>RailsFind :REfind
map <buffer> <silent> <Plug>RailsRelated :R
map <buffer> <silent> <Plug>RailsAlternate :A
inoremap <buffer> \> >
inoremap <buffer> \. >
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal autoindent
setlocal autoread
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal comments=:#
setlocal commentstring=#\ %s
setlocal complete=.,w,b,u,t,i,k
setlocal completefunc=syntaxcomplete#Complete
setlocal nocopyindent
setlocal nocursorcolumn
setlocal nocursorline
setlocal define=^\\s*def\\s\\+\\(self\\.\\)\\=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'ruby'
setlocal filetype=ruby
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=4
setlocal foldmarker={{{,}}}
setlocal foldmethod=indent
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=croql
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=0
setlocal include=^\\s*\\<\\(load\\|w*require\\)\\>
setlocal includeexpr=RailsIncludeexpr()
setlocal indentexpr=GetRubyIndent()
setlocal indentkeys=0{,0},0),0],!^F,o,O,e,=end,=elsif,=when,=ensure,=rescue,==begin,==end
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255,:,$
setlocal keywordprg=ri
setlocal nolinebreak
setlocal nolisp
setlocal nolist
setlocal makeprg=rake
setlocal matchpairs=(:),{:},[:],<:>
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
setlocal number
setlocal numberwidth=4
setlocal omnifunc=rubycomplete#Complete
setlocal path=.,~/Sites/Lunr,~/Sites/Lunr/app/controllers,~/Sites/Lunr/app,~/Sites/Lunr/app/models,~/Sites/Lunr/app/helpers,~/Sites/Lunr/config,~/Sites/Lunr/lib,~/Sites/Lunr/vendor,~/Sites/Lunr/vendor/plugins/*/lib,~/Sites/Lunr/test/unit,~/Sites/Lunr/test/functional,~/Sites/Lunr/test/integration,~/Sites/Lunr/app/apis,~/Sites/Lunr/app/services,~/Sites/Lunr/test,/vendor/plugins/*/test,~/Sites/Lunr/vendor/rails/*/lib,~/Sites/Lunr/vendor/rails/*/test,~/Sites/Lunr/spec,~/Sites/Lunr/spec/*,~/Sites/Lunr/app/views/vizs,~/Sites/Lunr/app/views,~/Sites/Lunr/public,~/Sites/Lunr,~/Sites/Lunr/app/controllers,~/Sites/Lunr/app,~/Sites/Lunr/app/models,~/Sites/Lunr/app/helpers,~/Sites/Lunr/config,~/Sites/Lunr/lib,~/Sites/Lunr/vendor,~/Sites/Lunr/vendor/plugins/*/lib,~/Sites/Lunr/test/unit,~/Sites/Lunr/test/functional,~/Sites/Lunr/test/integration,~/Sites/Lunr/app/apis,~/Sites/Lunr/app/services,~/Sites/Lunr/test,/vendor/plugins/*/test,~/Sites/Lunr/vendor/rails/*/lib,~/Sites/Lunr/vendor/rails/*/test,~/Sites/Lunr/spec,~/Sites/Lunr/spec/*,~/Si
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal noscrollbind
setlocal shiftwidth=2
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=2
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=%<%f\ %h%m%r%{RailsStatusline()}%=
setlocal suffixesadd=.rb,.rhtml,.erb,.rxml,.builder,.rjs,.mab,.liquid,.haml,.dryml,.yml,.csv,.rake,s.rb
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'ruby'
setlocal syntax=ruby
endif
setlocal tabstop=2
setlocal tags=./tags,tags,~/Sites/Lunr/tags,~/Sites/Lunr/.tags
setlocal textwidth=0
setlocal thesaurus=
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
7
normal zo
8
normal zo
9
normal zo
13
normal zo
15
normal zo
9
normal zo
20
normal zo
26
normal zo
28
normal zo
32
normal zo
36
normal zo
40
normal zo
44
normal zo
52
normal zo
8
normal zo
7
normal zo
let s:l = 25 - ((24 * winheight(0) + 14) / 29)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
25
normal! 04l
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
" vim: set ft=vim :
